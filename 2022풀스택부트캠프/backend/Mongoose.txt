mongoose 설치

1. npm init -y //패키치 설치
2. npm i mongoose


index.js 파일 참조.
몽구스 설정
몽구스 스케마 설정

node 실행후 .load index.js 실행
amadeus.save() 실행 // amadeus는 임의의 영화이름

터미널 탭 추가후
mongosh 실행.

db.movies.find() 를해보면 데이터가 들어가있다.


*노드에서 객체를 변경할 경우
ex)
amadeus.score = 9.5
설정후 save를 해줘야 몽고에서 변경된다.
amadeus.save()



///////////////////////
node 터미널에서 사용해보기
ex)
Movie.find({}).then(data => console.log(data))
Movie.find({rating: 'PG-13'}).then(data => console.log(data))
Movie.find({year: {$gte: 2010}}).then(data => console.log(data))
Movie.findOne({}).then(first => console.log(first)) // 가장 첫번째 정보 가져옴


업데이트하는 법(node에서)
ex)
Movie.updateOne({title: 'Amadeus'}, {year: 1984}).then(res => console.log(res))

// 한번에 여러개 변경
Movie.updateMany({title: {$in: ['Amadeus', 'Stand By me']}}, {score: 10}).then(res => console.log(res))

// find 업데이트 메서드 사용
Movie.findOneAndUpdate({title: 'The Iron Giant'}, {score: 7.6}, {new:true}).then(res => {console.log(res)})
* {new: true}를 넣은 이유는 기본값이 false다. 그래서 변경된 내용을 보여줄때 이전 내용을 보여주기때문에 변경된 내용을 함께 보려면 new: true를 넣어야 한다.


삭제하는 방법
ex)
Movie.remove({title: 'Amelie'}).then(msg => console.log(msg)) // 하나만 삭제

Movie.deleteMany({year: {$gte: 1999}}).then(msg => console.log(msg)) //여러개 삭제할때

//find 삭제 메서드 사용
Movie.findOneAndDelete({title: 'Alien'}).then(m => console.log(m))


******* find 메서드를 사용한 방법은 변경된 내역을 보여준다.